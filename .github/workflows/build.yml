name: Build Wine for x86_64 imagefs.txz

on:
  push:
    branches: [ main, custom-wine-9.16 ]
  pull_request:
    branches: [ main, custom-wine-9.16 ]
  workflow_dispatch:

jobs:
  build:
    env:
      PREFIX: /mnt/arch/prefix
    runs-on: ubuntu-latest
    steps:

      - name: Cache Arch bootstrap tarball
        id: cache-arch-bootstrap
        uses: actions/cache@v3
        with:
          path: archlinux-bootstrap-x86_64.tar.zst
          key: ${{ runner.os }}-arch-bootstrap-latest
          restore-keys: |
            ${{ runner.os }}-arch-bootstrap-

      - name: "Install ArchLinux"
        run: |
          sudo apt update
          sudo apt install -y arch-install-scripts wget
          sudo mkdir -p /mnt/
          if [ ! -f archlinux-bootstrap-x86_64.tar.zst ]; then
            wget https://geo.mirror.pkgbuild.com/iso/latest/archlinux-bootstrap-x86_64.tar.zst
          else
            echo "â†’ using cached bootstrap"
          fi
          sudo tar -xf archlinux-bootstrap-x86_64.tar.zst
          sudo mv root.x86_64 /mnt/arch

          sudo arch-chroot /mnt/arch bash -c "
            sed -i '/^\[multilib\]/,+1 s/^#//' /etc/pacman.conf && \
            sed -i 's|^#Server|Server|' /etc/pacman.d/mirrorlist && \
            pacman -Sy
          "
          sudo arch-chroot /mnt/arch bash -c "pacman-key --init && pacman-key --populate && sed -i 's/#Server/Server/g' /etc/pacman.d/mirrorlist && sed -i 's/CheckSpace/#CheckSpace/g' /etc/pacman.conf && pacman -Syu --noconfirm \
            base base-devel git mesa pulseaudio gstreamer \
            gst-plugins-base gnutls xmlto fop libxslt libx11 \
            libxi libxext libxinerama libxrandr libxrender \
            libxfixes libxcursor xorgproto"
        #   sudo arch-chroot /mnt/arch pacman -S --noconfirm \
        #     base-devel git clang gcc-multilib pkgconf autoconf automake \
        #     xorgproto libx11 libxext libxi libxrandr mesa \
        #     pulseaudio gstreamer gst-plugins-base gnutls \
        #     lib32-glibc lib32-libx11 lib32-libxext lib32-libxi lib32-libxrandr \
        #     lib32-mesa lib32-libpulse lib32-gnutls lib32-gstreamer lib32-gst-plugins-base-libs


      - name: Save Arch bootstrap tarball to cache
        if: steps.cache-arch-bootstrap.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: archlinux-bootstrap-x86_64.tar.zst
          key: ${{ runner.os }}-arch-bootstrap-latest

      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Copy Repository to Chroot"
        run: |
          sudo cp -rf $PWD /mnt/arch/wine-custom

      - name: "Unpack imagefs"
        run: |
          curl -L https://github.com/utkarshdalal/wine-custom/releases/download/imagefs/imagefs.txz -o imagefs.txz
          mkdir -p imagefs
          tar -xf imagefs.txz -C imagefs

      - name: "Build Wine for x86_64"
        run: |
            sudo arch-chroot /mnt/arch bash << 'EOF'
                #!/bin/bash
                set -e  # Exit on any error
                set -x  # Print commands as they're executed
                
                pacman -Sy --noconfirm autoconf automake pkgconf clang gcc-multilib mingw-w64-gcc mingw-w64-crt mingw-w64-binutils mingw-w64-headers
                cd /wine-custom

                # sed -i 's/BOOL[[:space:]]*bool;/BOOL bval;/' programs/winhlp32/macro.h
                # sed -i 's/\<bool\>/bval/g'          dlls/jscript/bool.c
                
                # Build wine for glibc x86_64
                echo 'Configuring ARM64 build...'
                export CFLAGS="-std=gnu89"
                ./configure --enable-archs=i386,x86_64 \
                    --prefix=/opt/wine \
                    --with-x --with-opengl --with-pulse --with-gstreamer --with-gnutls \
                    --with-xinput --with-xinput2 \
                    --disable-winemenubuilder --disable-tests \
                    --without-oss --without-usb --without-sdl --without-cups --without-netapi \
                    --without-pcap --without-gphoto --without-v4l2 --without-pcsclite \
                    --without-wayland --without-opencl --without-dbus --without-sane \
                    --without-udev --without-capi --without-xshm --without-xxf86vm

                echo 'Building wine...'
                make EXTRACFLAGS="-std=gnu89" -j$(nproc)

                echo 'Installing wine...'
                make install DESTDIR=/stage
                tar -C /stage -caf /wine-opt.txz opt/wine
            EOF
            sudo mv /mnt/arch/wine-opt.txz .

      - name: merge new wine into imagefs
        run: |
            rm -rf imagefs/opt/wine
            tar -xf wine-opt.txz -C imagefs          # overwrites workroot/opt/wine
            tar -C imagefs -caf imagefs-new.txz .
      
      - uses: actions/upload-artifact@v4
        with:
          name: imagefs-new
          path: imagefs-new.txz